{
  "problem_id": 9,
  "title": "XOR from 1 to n",
  "statement": "You are given an integer n (1 <= n < 10^18). Your task is to compute the XOR of all integers from 1 to n, i.e., 1 ⊕ 2 ⊕ 3 ⊕ ... ⊕ n.",
  "input_format": "The first and only line contains an integer n.",
  "output_format": "Print a single integer — the result of 1 XOR 2 XOR ... XOR n.",
  "constraints": {
    "1 <= n < 1000000000000000000": true
  },
  "time_limit": "1s",
  "sample_testcases": [
    {
      "input": "3\n",
      "output": "0\n"
    },
    {
      "input": "5\n",
      "output": "1\n"
    },
    {
      "input": "10\n",
      "output": "11\n"
    }
  ],
  "tags": ["Bit Manipulation", "XOR", "Math", "Prefix Pattern", "Optimized Calculation"]
}
